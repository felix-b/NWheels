## RDP connection details
#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

version: 0.1.0-0.dev.{build}

branches:
  only:
  - master

image: Visual Studio 2017

clone_folder: c:\projects\NWheels

nuget:
  project_feed: true

before_build:
- cmd: >-
    cd c:\projects\NWheels\Source2

    dotnet --version

    dotnet restore

build_script:
- ps: >-
    $version_prefix_match = $env:APPVEYOR_BUILD_VERSION -match '(\d+)\.(\d+)\.(\d+)'

    $build_version_prefix = $matches[0]
    
    $assembly_build_version = "$build_version_prefix.$env:APPVEYOR_BUILD_NUMBER"
    
    echo "Assembly build version: $assembly_build_version"
    
    dotnet build -c Release -p:Version=$assembly_build_version
    
test_script:
- ps: >-
    cd c:\projects\NWheels\Source2
    
    $testRunStatus = "OK"
    
    Get-ChildItem -Directory -Recurse -Include *.UnitTests,*.Tests | Foreach {
        echo --- "Running unit tests: project" $_.fullName ---; 
        dotnet test $_.fullname --no-build --no-restore -c Release --filter Purpose=UnitTest;
        if ($LastExitCode -ne 0) { $testRunStatus = "FAIL" }
    }

    Get-ChildItem -Directory -Recurse -Include *.IntegrationTests,*.Tests | Foreach {
        echo --- "Running integration tests: project" $_.fullName ---; 
        dotnet test $_.fullname --no-build --no-restore -c Release --filter Purpose=IntegrationTest
        if ($LastExitCode -ne 0) { $testRunStatus = "FAIL" }
    }

    Get-ChildItem -Directory -Recurse -Include *.SystemApiTests,*.Tests | Foreach {
        echo --- "Running system API tests: project" $_.fullName ---; 
        dotnet test $_.fullname --no-build --no-restore -c Release --filter Purpose=SystemApiTest
        if ($LastExitCode -ne 0) { $testRunStatus = "FAIL" }
    }

    Get-ChildItem -Directory -Recurse -Include *.SystemUITests,*.Tests | Foreach {
        echo --- "Running system UI tests: project" $_.fullName ---; 
        dotnet test $_.fullname --no-build --no-restore -c Release --filter Purpose=SystemUITest
        if ($LastExitCode -ne 0) { $testRunStatus = "FAIL" }
    }

    if ($testRunStatus -ne "OK") {
        throw "Test were not successfully passed"
    }

after_test:
- cmd: >-
    cd c:\projects\NWheels\Source2

    echo %APPVEYOR_BUILD_VERSION%
    
    dotnet pack -c Release --no-build -p:Version=%APPVEYOR_BUILD_VERSION% -p:Authors="felix-b" -p:Copyright="Copyright 2014 Felix Berman and contributors" -p:PackageLicenseUrl="https://github.com/felix-b/NWheels/blob/master/LICENSE" -p:PackageProjectUrl="http://nwheels.io" -p:PackageIconUrl="https://github.com/felix-b/NWheels/raw/master/Docs/Images/logo-132.png"

on_success:
- ps: >-
    cd c:\projects\NWheels\Source2

    Get-ChildItem -File -Recurse -Include *.nupkg | Foreach {appveyor PushArtifact $_.fullName}
    
## Pause build until file from desktop will be removed
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
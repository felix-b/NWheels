using System;

namespace NWheelsTempApiLib
{
    public static class TypeContract
    {
        public class DomainEntityAttribute : Attribute
        {
        }
        public class DomainValueObjectAttribute : Attribute
        {
        }
    }

    public static class MemberContract
    {
        public class TransientAttribute : Attribute
        {
        }
        public class PersistentAttribute : Attribute
        {
        }
        public class InjectedDependencyAttribute : Attribute
        {
        }
        public class AutoGeneratedAttribute : Attribute
        {
        }
        public class EntityIdAttribute : Attribute
        {
        }
        public class RequiredAttribute : Attribute
        {
            public RequiredAttribute(bool allowEmpty = false)
            {
            }
        }

        public static class Semantics
        {
            public class EmailAttribute : Attribute
            {
            }
        }
    }

    public static class SecurityContract
    {
        public class AllowAnonymousAttribute : Attribute
        {
        }
        public class Require : Attribute
        {
            public Require(object claim)
            {
                this.Claim = claim;
            }
            public object Claim { get; }
        }
    }

    public static class EntityRef<TEntity>
        where TEntity : class
    {
        public static EntityRef<TId, TEntity> FromId<TId>(TId id)
        {
            return new EntityRef<TId, TEntity>(id);
        }
    }

    public struct EntityRef<TId, TEntity>
        where TEntity : class
    {
        public EntityRef(TId id)
        {
            this.Id = id;
            this.IsLoaded = false;
            this.CanLoad = false;
            this.Entity = null;
        }

        public TId Id { get; }
        public bool IsLoaded { get; }
        public bool CanLoad { get; }
        public TEntity Entity { get; }
    }

    public interface IThisDomainObjectServices
    {
        string FormatDisplayString(ILocalizationService localization);
        string DisplayStringFormatPattern { get; }
    }

    public interface ILocalizationService
    {
        string GetLocalDisplayString(object value, string formatPattern);
    }
}

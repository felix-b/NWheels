using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ElectricityBilling.Domain.Basics;
using NWheels;
using NWheels.Ddd;

namespace ElectricityBilling.Domain.Billing
{
    public abstract class PricingPlanEntity
    {
        public abstract MoneyValueObject CalculateDailyPrice(DateTime date, decimal dailyConsumptionKwh);

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        public virtual async Task ValidateInvariants(IDomainObjectValidator<PricingPlanEntity> report)
        {
            if (!this.IsReadOnly)
            {
                var isAssigned = await IsAssignedToAnyContract();

                if (isAssigned)
                {
                    report.InvalidValue(x => x.IsReadOnly, ThisLocalizables.PricingPlanMustBeReadOnlyBecauseItIsInUse);
                }
            }
        }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        public Task<bool> IsAssignedToAnyContract()
        {
            var query = ThisObject.GetContext<ElectricityBillingContext>().QueryCustomerContractsByPricingPlan(this.Id);
            return query.AnyAsync();
        }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        [MemberContract.AutoGenerated]
        public long Id { get; }

        [MemberContract.Required]
        public string Description { get; set; }

        bool IsReadOnly { get; set; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        [MemberContract.InjectedDependency]
        protected IThisDomainObjectServices ThisObject { get; }

        [MemberContract.InjectedDependency]
        protected IThisLocalizables ThisLocalizables { get; }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        [NWheels.I18n.TypeContract.Localizables]
        public interface IThisLocalizables
        {
            string PricingPlanMustBeReadOnlyBecauseItIsInUse { get; }
        }
    }

    //---------------------------------------------------------------------------------------------------------------------------------------------------------

    [NWheels.TypeContract.Presentation.DefaultFormat("{PricePerKwh}/kWh")]
    public class FlatRatePricingPlanEntity : PricingPlanEntity
    {
        public override MoneyValueObject CalculateDailyPrice(DateTime date, decimal consumptionKwh)
        {
            return consumptionKwh * PricePerKwh;
        }

        //-----------------------------------------------------------------------------------------------------------------------------------------------------

        [MemberContract.Validation.NonNegative]
        public MoneyValueObject PricePerKwh { get; set; }
    }
}
